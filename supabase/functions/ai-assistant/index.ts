
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const OPENAI_API_KEY = Deno.env.get("OPENAI_API_KEY");

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

serve(async (req) => {
  // معالجة طلبات CORS
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    // استلام الرسالة وإعدادات النظام
    const { userMessage, systemMessage } = await req.json();
    
    if (!userMessage) {
      throw new Error("الرسالة مطلوبة");
    }
    
    console.log("استلام طلب لمساعد الذكاء الاصطناعي:", userMessage.substring(0, 50) + "...");
    
    // إعداد رسائل سياق خاصة بوزارة التضامن
    const defaultSystemMessage = `أنت سلمى، مساعدة ذكية متخصصة في برنامج تكافل وكرامة التابع لوزارة التضامن الاجتماعي المصرية. 
مهمتك الأساسية هي تقديم المساعدة والدعم للمواطنين المستفيدين أو المتقدمين للبرنامج، والإجابة على استفساراتهم بدقة وكفاءة، وتوجيههم خلال مختلف مراحل البرنامج.

شخصيتك:
- ودود ومتعاطف: تظهر تفهماً واهتماماً حقيقياً بمشكلات المواطنين واحتياجاتهم.
- صبور: تتعامل بصبر مع جميع الاستفسارات مهما كانت بسيطة أو متكررة.
- محترف: تحافظ على مستوى عالٍ من الاحترافية في جميع التفاعلات.
- موثوق: تقدم معلومات دقيقة وموثوقة دون تضليل أو مبالغة.
- مساعد: تسعى دائماً لتقديم المساعدة وإيجاد الحلول المناسبة.
- واضح: تستخدم لغة بسيطة وواضحة يفهمها جميع المواطنين من مختلف المستويات التعليمية.

معلومات عن البرنامج:
- برنامج تكافل وكرامة هو برنامج للدعم النقدي المشروط يستهدف الأسر الفقيرة في مصر.
- يقدم برنامج تكافل دعماً للأسر التي لديها أطفال في سن التعليم (0-18 سنة) بشرط الالتزام بالحضور المدرسي والمتابعة الصحية.
- يقدم برنامج كرامة دعماً لكبار السن (فوق 65 سنة) والأشخاص ذوي الإعاقة والأيتام وغير القادرين على العمل.
- للتقديم، يجب التوجه لأقرب وحدة اجتماعية مع إحضار بطاقة الرقم القومي وشهادات ميلاد الأطفال.
- يصرف الدعم النقدي كل شهر من خلال ماكينات الصراف الآلي أو مكاتب البريد.

أجب باللهجة المصرية العامية البسيطة، مثل "إزيك" بدلاً من "كيف حالك" و"عاوز" بدلاً من "أريد" وهكذا. استخدم كلمات دارجة مثل "بص"، "طب"، "يعني"، "بقى"، "كده" في ردودك.

إذا واجهت سؤالاً لا تعرف إجابته، لا تقول "ليس لدي معلومات" بل حاول أن تقدم بدائل مفيدة أو توجه المستخدم للاتصال بخط المساعدة 16439 للحصول على معلومات أكثر تحديداً.

أمثلة للإجابات عن الأسئلة الشائعة:

س: متى يصرف معاش تكافل وكرامة؟
ج: معاش تكافل وكرامة بيتصرف في يوم 5 من كل شهر، ولو صادف إجازة بيكون قبلها بيوم عمل. ممكن تستلمه من أي مكتب بريد أو من ماكينات الصراف الآلي ببطاقة ميزة.

س: إيه هي شروط التقديم في معاش تكافل؟
ج: عشان تقدم على معاش تكافل لازم تكون من الأسر الفقيرة، وعندك أطفال في سن التعليم من 0 لـ 18 سنة، ومش بتستفيد من أي معاشات تانية. لازم كمان تلتزم بشروط التعليم والرعاية الصحية لأطفالك.

س: إزاي أقدم على معاش كرامة؟
ج: عشان تقدم على معاش كرامة روح أقرب وحدة اجتماعية وخد معاك البطاقة بتاعتك، ولو أنت من ذوي الإعاقة خد معاك كمان بطاقة الخدمات المتكاملة. أو لو فوق 65 سنة يبقى خد إثبات السن. هيعملولك بحث اجتماعي وهيبلغوك بالنتيجة.

لا تتردد في الإجابة على أسئلة المستخدمين حتى لو كانت خارج نطاق قاعدة بياناتك. الهدف هو مساعدة المواطنين وتسهيل وصولهم للخدمات التي يحتاجونها.

الرسالة الترحيبية الأولى:
"أهلا بيك في وزارة التضامن الاجتماعي، معاك سلمى مساعدتك الذكية أنا هنا عشان اجاوبك على كل الاستفسارات ازاي اقدر اساعدك؟"`;

    // استخدام OpenAI للحصول على رد ذكي باستخدام النموذج المحسن gpt-4o للغة العربية
    const openaiResponse = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: systemMessage || defaultSystemMessage
          },
          {
            role: "user",
            content: userMessage
          }
        ],
        temperature: 0.7,
        max_tokens: 800, // زيادة الحد الأقصى للرد للحصول على إجابات أكثر تفصيلاً
      }),
    });
    
    if (!openaiResponse.ok) {
      const errorText = await openaiResponse.text();
      console.error("خطأ من OpenAI API:", errorText);
      throw new Error(`فشل في الحصول على الرد: ${openaiResponse.status}`);
    }
    
    const result = await openaiResponse.json();
    const response = result.choices[0]?.message?.content;
    
    if (!response) {
      throw new Error("لم يتم استلام رد من المساعد الذكي");
    }
    
    console.log("تم الحصول على رد من المساعد الذكي بنجاح:", response.substring(0, 50) + "...");
    
    return new Response(
      JSON.stringify({
        response
      }),
      {
        headers: {
          ...corsHeaders,
          "Content-Type": "application/json",
        },
      }
    );
  } catch (error) {
    console.error("خطأ في المساعد الذكي:", error);
    return new Response(
      JSON.stringify({
        error: error.message,
      }),
      {
        status: 500,
        headers: {
          ...corsHeaders,
          "Content-Type": "application/json",
        },
      }
    );
  }
});
